docker ps --all // list all container
docker rm <container_id> // remove container
docker run -d -p 8080:80 --name server // run container
-d = run
-p = port
docker exec -it <container_id> bash = เข้าไปใน container
ls // list files
pwd // print working directory
cd // change directory
cat // print file content
cd .. // go backcd ย้อนกลับไป folder cd
exit // exit container
docker stop <container_id> // stop container
docker system prune // remove all stopped container

docker-compose up -d // open container
docker-compose down // stop cocntainer

-------------------------------------------------------------------------
* index.js เก่า *
const http = require('http'); // Import Node.js core module

const host = 'localhost'; // localhost
const port = 8000; // Port number

// กำหนด listener ให้กับ server เมื่อเปิด เว็บไปที่ http://localhost:8000/ จะเรียกใช้งาน function requireListener
const requireListener = function (req, res) {
  res.writeHead(200);
  res.end('My first server!');
}

const server = http.createServer(requireListener); 
server.listen(port, host, () => { 
    console.log(`Server is running on http://${host}:${port}`);  // bachtick 
    }); // กำหนด port และ host ให้กับ server